apiVersion: v1
kind: ReplicationController
metadata:
  name: rc-mysql-master
  labels:
    name: mysql-master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mysql-master
    spec:
      containers:
      - name: mysql-master
        image: local-mysql-master
        imagePullPolicy: Never
        args: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci", "--max_allowed_packet=32M"]
        env:
          - name: TZ
            value: 'Asia/Shanghai'
          - name: LANG
            value: 'C.UTF-8'
          - name: MYSQL_ROOT_PASSWORD
            value: 'demo'
          - name: MYSQL_DATABASE
            value: 'demo'
          - name: MYSQL_REPLICATION_USER
            value: 'repl'
          - name: MYSQL_REPLICATION_PASSWORD
            value: 'slave'
        ports:
        - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-master
spec:
  ports:
  - port: 3306 # the port that this service should serve on
    # the container on each pod to connect to, can be a name
    # (e.g. 'www') or a number (e.g. 80)
    targetPort: 3306
    protocol: TCP
    nodePort: 0
  # just like the selector in the replication controller,
  # but this time it identifies the set of pods to load balance
  # traffic to.
  selector:
    name: mysql-master
  type:
     NodePort
